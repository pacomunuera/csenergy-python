# -*- coding: utf-8 -*-
"""
Created on Sat Apr 25 11:29:44 2020

@author: paco
"""
# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.pyplot as plt


# x = np.array([288,298,308,318,328,338,348,358,368,378,388,398,408,418,428,
#               438,448,458,468,478,488,498,508,518,528,538,548,558,568,578,
#               588,598,608,618,628,638,648,658,668,
#               678,688,698,708,718,728,738,748,758,768,778,788,798,808,818,
#               828,838,848,858,868,878,888,898])

# y = np.array([0.004717,0.00369,0.00295,0.002404,0.001992,0.001676,0.001428,
#               0.001231,0.001073,0.000943,0.000837,0.000748,0.000673,0.000609,
#               0.000555,0.000508,0.000468,0.000432,0.000401,0.000374,0.000349,
#               0.000328,0.000308,0.000291,0.000275,0.000261,0.000248,0.000236,
#               0.000225,0.000215,0.000206,0.000198,0.00019,0.000183,0.000176,
#               0.00017,0.000164,0.000159,0.000154,
#               0.000149239,0.000144737,0.000140403,0.000136183,0.000132023,
#               0.000127871,0.000123672,0.000119373,0.00011492,0.000110261,
#               0.000105341,0.000100107,9.45058E-05,8.84834E-05,8.19864E-05,
#               7.49613E-05,6.73547E-05,5.91129E-05,5.01826E-05,4.05101E-05,
#               3.0042E-05,1.87247E-05,6.5048E-06])


# x = np.array([558,568,578,
#               588,598,608,618,628,638,648,658,668,658,668])

# y = np.array([0.000236,0.000225,0.000215,0.000206,0.000198,0.00019,0.000183,0.000176,
#               0.00017,0.000164,0.000159,0.000154,0.000159,0.000154])

# Calcular ajustes para diferentes grados
# mu = [5.1346826,-0.08395359, 0.00059705155, -2.409221e-06, 6.0292345e-09,
#          -9.5788095e-12, 9.4330297e-15,-5.2644e-18, 1.274782e-21]

mu = [   5.1346826,
         -0.08395359,
         0.00059705155,
         -2.409221e-06,
         6.0292345e-09,
         -9.5788095e-12,
         9.4330297e-15,
         -5.2644e-18,
         1.274782e-21]


xl = [288,298,308,318,328,338,348,358,368,378,388,398,408,418,428,438,448,
      458,468,478,488,498,508,518,528,538,548,558,568,578,588,598,608,618,
      628,638,648,658,668,678,688,698,708,718,728,738,748,758,768,778,788,798]


yl = [0.004716936771976501,0.00368966373893824,0.002950062266603241,
      0.002404218041467343,0.001992485540943706,0.0016758533625425601,
      0.001428128577958499,0.0012313070896919007,0.0010727491924272083,
      0.0009434100156389366,0.0008367038307147932,0.0007477590142338396,
      0.0006729194050042499,0.0006094043885259677,0.0005550732401759549,
      0.0005082591867871916,0.0004676508669218324,0.0004322065132913724,
      0.00040109104914953867,0.00037362944452363437,0.0003492717541073222,
      0.0003275666453367051,0.00030814116434533254,0.00029068513186329735,
      0.00027493900864076527,0.00026068438435429406,0.00024773646719967465,
      0.00023593811152839927,0.0002251550368885236,0.0002152719766249639,
      0.00020618955671365842,0.00019782175197972725,0.00019009380166932398,
      0.00018294049262593566,0.0001763047382989309,0.00017013639710003562,
      0.00016439128539828915,0.00015903034956907277,0.00015401896862604557,
      0.000149909,0.000145818,0.000141727,0.000137636,0.000133545,0.000129455,
      0.000125364,0.000121273,0.000117182,0.000113091,0.000109,0.000104909,
      0.000100818]

poly = np.polynomial.polynomial.Polynomial(mu)


# xl = []
# yl = []


# for t in range(300,700,5):
#     xl.append(t)
#     yl.append(poly(t))


sols = {}
for grado in range(8,9):
  z = np.polyfit(xl, yl, grado, full=True)
  sols[grado] = z

# Pintar datos
plt.plot(xl, yl, 'o')

#Pintar curvas de ajuste
xp = np.linspace(288,800,10000)
for grado, sol in sols.items():
  coefs, error, *_ = sol
  p = np.poly1d(coefs)
  plt.plot(xp, p(xp), "-", label="Gr: %s. Error %.3f" % (grado, error) )
  #plt.plot(xp, poly(xp), "-", label="Gr: %s. Error %.3f" % (grado, error) )
  print(coefs)
plt.legend()



